---
import { getCollection } from 'astro:content'

import ArrowCard from '@components/ArrowCard.astro'

type Props = {
  id: string
  type: 'meetups' | 'shows'
}

const { id, type } = Astro.props

const coll = (await getCollection(type))
  // .filter(post => !post.data.draft)
  .sort((a, b) => a.data.start.valueOf() - b.data.start.valueOf())

const now = new Date()
const upcoming = coll.filter(m => new Date(m.data.start) - now > 0)
const past = coll.filter(m => new Date(m.data.start) - now < 0)
---

<>
  <h1>{type.toUpperCase()}</h1>
  <div class="flex flex-wrap gap-y-2 items-center justify-between">
    <h5 class="font-semibold text-black dark:text-white">
      Upcoming:
    </h5>
  </div>
  <ul class="flex flex-col gap-4">
    {
      upcoming.length > 0
      ?
      upcoming.map(( m ) => (
        <li class="animate">
          <ArrowCard entry={m} />
        </li>
      ))
      : <li>None</li>
    }
  </ul>
  <div class="flex flex-wrap gap-y-2 items-center justify-between">
    <h5 class="font-semibold text-black dark:text-white">
      Past:
    </h5>
  </div>
  <ul class="flex flex-col gap-4">
    {
      past.length > 0
      ?
      past.slice(0).reverse().map(( m ) => (
        <li class="animate">
          <ArrowCard entry={m} />
        </li>
      ))
      : <li>None</li>
    }
  </ul>
  <div>
    Google Calendar: <a href=`https://calendar.google.com/calendar/embed?src=${id}`>View</a> | <a href=`https://calendar.google.com/calendar/u/0?cid=${id}`>Subscribe</a>
  </div>
</>
